// Generated by CoffeeScript 1.8.0
(function() {
  var Contacts, americano, createRequest, mapSharedDoc;

  americano = require("americano");

  module.exports = Contacts = americano.getModel('Contact', {
    "id": String,
    "fn": String,
    "n": String,
    "datapoints": function(x) {
      return x;
    },
    "note": String,
    "shared": Boolean
  });

  createRequest = function() {
    return Contacts.defineRequest("shared", mapSharedDoc, function(err) {
      if (err) {
        return console.log(err);
      }
    });
  };

  mapSharedDoc = function(doc) {
    if (doc.shared) {
      emit(doc._id, null);
    }
  };

  module.exports.deleteAll = function(callback) {
    return contacts.requestDestroy("all", function(err) {
      return callback(err);
    });
  };

  module.exports.createContacts = function(nDocs, baseName, callback) {
    var cpt, i, ids, _i, _results;
    ids = [];
    cpt = 0;
    _results = [];
    for (i = _i = 0; 0 <= nDocs ? _i <= nDocs : _i >= nDocs; i = 0 <= nDocs ? ++_i : --_i) {
      _results.push(createSingleContact(baseName, function(err, result) {
        if (err) {
          callback(err);
        }
        ids.push(result.id);
        if (cpt === nDocs) {
          return callback(null, ids);
        }
      }));
    }
    return _results;
  };

  module.exports.createSingleContact = function(baseName, callback) {
    return contacts.create({
      fn: baseName
    }, function(err, result) {
      return callback(err, result.id);
    });
  };

  module.exports.getIdsSharedContacts = function(callback) {
    return contacts.request("shared", function(err, results) {
      console.log("ids shared contacts : " + results);
      return callback(err, results);
    });
  };

}).call(this);
